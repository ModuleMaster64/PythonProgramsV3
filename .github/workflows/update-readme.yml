name: üß† Update README Stats

on:
  push:
    branches: [main]
  schedule:
    - cron: '*/50 * * * *'  # Runs every 50 minutes!

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Count Python files and lines
      run: |
        PY_FILES=$(find . -name "*.py" | wc -l)
        TOTAL_LINES=$(find . -name "*.py" -exec cat {} + | wc -l)
        echo "PY_FILES=$PY_FILES" >> $GITHUB_ENV
        echo "TOTAL_LINES=$TOTAL_LINES" >> $GITHUB_ENV

    - name: Get commit counts by author
      run: |
        AUTHORS=$(git shortlog -sn | head -n 5 | awk '{print "üë§ " $2 " " $1}' | paste -sd '\n')
        echo "AUTHORS<<EOF" >> $GITHUB_ENV
        echo "$AUTHORS" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Update README.md
      run: |
        STATS="üìÑ Total lines of code: $TOTAL_LINES\nüêç Number of Python files: $PY_FILES\n\nüî¢ Top contributors:\n$AUTHORS"
        DATE="üïí Last updated: $(date -u +"%Y-%m-%d %H:%M UTC")"

        awk -v stats="$STATS" -v date="$DATE" '
          BEGIN { statsBlock=0; dateBlock=0 }
          /<!-- STATS:START -->/ { print; print stats; statsBlock=1; next }
          /<!-- STATS:END -->/ { print; statsBlock=0; next }
          /<!-- UPDATED:START -->/ { print; print date; dateBlock=1; next }
          /<!-- UPDATED:END -->/ { print; dateBlock=0; next }
          statsBlock || dateBlock { next }
          { print }
        ' README.md > README.tmp && mv README.tmp README.md

    - name: Commit changes
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
        git add README.md
        TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M UTC")
        git commit --allow-empty -m "üß† Update README stats [$TIMESTAMP]"
        git push
